# Generated by Django 4.0.4 on 2022-04-13 17:50

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Artifacts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter Artifacts', max_length=50, unique=True, verbose_name='Artifacts')),
                ('type', models.CharField(choices=[('Flower', 'Flower'), ('Plume', 'Plume'), ('Sands', 'sands'), ('Goblet', 'Goblet'), ('Circlet', 'Circlet')], max_length=50, verbose_name='Artifact Type')),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter Region', max_length=50, unique=True, verbose_name='Region')),
            ],
        ),
        migrations.CreateModel(
            name='Character',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Enter Character's Name", max_length=50, unique=True, verbose_name='Character Name')),
                ('elements', models.CharField(choices=[('Geo', 'Geo'), ('Electro', 'Electro'), ('Pyro', 'Pyro'), ('Cryo', 'Cryo'), ('Anemo', 'Anemo'), ('Hydro', 'Hydro'), ('Dendro', 'Dendro')], max_length=50, verbose_name='Element')),
                ('weapon_type', models.CharField(choices=[('Sword', 'Sword'), ('Claymore', 'Claymore'), ('Catalyst', 'Catalyst'), ('Bow', 'Bow'), ('Spear', 'Spear')], max_length=50, verbose_name='Weapon Type')),
                ('role', models.CharField(choices=[('Dps', 'Dps'), ('Sub Dps', 'Sub Dps'), ('Utility', 'Utility')], max_length=50, verbose_name='Role')),
                ('recomended_artifacts', models.ManyToManyField(to='genshin.artifacts', verbose_name='Artifacts')),
                ('region', models.ManyToManyField(to='genshin.region', verbose_name='Region')),
            ],
        ),
    ]
